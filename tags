!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Main	src/main/scala/challenge/21refinch/Main.scala	/^object Main extends App {$/;"	c
Message	src/main/scala/challenge/21refinch/Main.scala	/^  case class Message(i: Int)$/;"	c
amm	target/scala-2.12/src_managed/test/amm.scala	/^object amm extends App { ammonite.Main.main(args) }/;"	c
buildLookupIndex	src/main/scala/challenge/21refinch/Main.scala	/^    def buildLookupIndex[A]($/;"	m
challenge.finch	src/main/scala/challenge/21refinch/Main.scala	/^package challenge.finch$/;"	p
compress	src/main/scala/challenge/21refinch/Main.scala	/^    def compress[A]($/;"	m
getCharAtIndexRoute	src/main/scala/challenge/21refinch/Main.scala	/^  def getCharAtIndexRoute: Endpoint[IO, Message] = get(path[Int]) { i: Int =>$/;"	m
getData	src/main/scala/challenge/21refinch/Main.scala	/^    def getData: List[Char] = getDataFromUrl(url).replaceAll("\\n", "").toList$/;"	m
getDataFromUrl	src/main/scala/challenge/21refinch/Main.scala	/^    def getDataFromUrl (url: String): String = scala.io.Source.fromURL(url).mkString$/;"	m
healthcheck	src/main/scala/challenge/21refinch/Main.scala	/^  def healthcheck: Endpoint[IO, String] = get(pathEmpty) {$/;"	m
lookupTable	src/main/scala/challenge/21refinch/Main.scala	/^    type lookupTable[A] = List[(Int, (Int, A))]$/;"	T
retrieve	src/main/scala/challenge/21refinch/Main.scala	/^      def retrieve[A](xs: lookupTable[A], i: Int): A = ???$/;"	m
service	src/main/scala/challenge/21refinch/Main.scala	/^  def service: Service[Request, Response] = Bootstrap$/;"	m
url	src/main/scala/challenge/21refinch/Main.scala	/^    val url = "http:\/\/localhost:8080"$/;"	l
util	src/main/scala/challenge/21refinch/Main.scala	/^  object util {$/;"	c
